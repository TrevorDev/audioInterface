// Generated by CoffeeScript 1.6.2
var ffi, intPtr, k, libasound, ref, stream, uintPtr, ulongPtr, v, voidPtr, voidPtrPtr, _ref;

ffi = require('ffi');

ref = require('ref');

stream = require('stream');

intPtr = ref.refType('int');

uintPtr = ref.refType('uint');

ulongPtr = ref.refType('ulong');

voidPtr = ref.refType('void');

voidPtrPtr = ref.refType(voidPtr);

module.exports = libasound = ffi.Library('libasound', {
  snd_strerror: ['string', ['int']],
  snd_pcm_open: ['int', [voidPtrPtr, 'string', 'int', 'int']],
  snd_pcm_start: ['int', [voidPtr]],
  snd_pcm_drop: ['int', [voidPtr]],
  snd_pcm_drain: ['int', [voidPtr]],
  snd_pcm_close: ['int', [voidPtr]],
  snd_pcm_prepare: ['int', [voidPtr]],
  snd_pcm_reset: ['int', [voidPtr]],
  snd_pcm_name: ['string', [voidPtr]],
  snd_pcm_state: ['int', [voidPtr]],
  snd_pcm_state_name: ['string', ['int']],
  snd_pcm_hw_params_sizeof: ['int', []],
  snd_pcm_hw_params_any: ['int', [voidPtr, voidPtr]],
  snd_pcm_hw_params_set_access: ['int', [voidPtr, voidPtr, 'int']],
  snd_pcm_hw_params_get_access: ['int', [voidPtr, intPtr]],
  snd_pcm_hw_params_set_format: ['int', [voidPtr, voidPtr, 'int']],
  snd_pcm_hw_params_get_format: ['int', [voidPtr, intPtr]],
  snd_pcm_hw_params_set_channels: ['int', [voidPtr, voidPtr, 'uint']],
  snd_pcm_hw_params_get_channels: ['int', [voidPtr, uintPtr]],
  snd_pcm_hw_params_set_rate_near: ['int', [voidPtr, voidPtr, uintPtr, intPtr]],
  snd_pcm_hw_params_set_rate: ['int', [voidPtr, voidPtr, 'uint', 'int']],
  snd_pcm_hw_params_get_rate: ['int', [voidPtr, uintPtr, intPtr]],
  snd_pcm_hw_params: ['int', [voidPtr, voidPtr]],
  snd_pcm_hw_params_get_period_size: ['int', [voidPtr, ulongPtr, intPtr]],
  snd_pcm_readi: ['long', [voidPtr, voidPtr, 'ulong']],
  snd_pcm_writei: ['long', [voidPtr, voidPtr, 'ulong']],
  snd_pcm_format_size: ['int', ['int', 'int']],
  snd_pcm_avail_update: ['long', [voidPtr]]
});

libasound.pcmHwParamsPtr = {
  name: 'snd_pcm_hw_params',
  size: libasound.snd_pcm_hw_params_sizeof(),
  alignment: 1,
  indirection: 1
};

libasound.pcmPtr = voidPtr;

libasound.pcmPtrPtr = voidPtrPtr;

_ref = require('./constants');
for (k in _ref) {
  v = _ref[k];
  libasound[k] = v;
}
